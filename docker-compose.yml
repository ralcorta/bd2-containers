version: "3"

services:
  #######################
  ##                   ##
  ##  DATABASES CORE   ##
  ##                   ##
  #######################
  redis:
    image: redis
    container_name: redis
    hostname: redis
    expose:
      - ${REDIS_PORT}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - ./redis/redis-data:/var/lib/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=${REDIS_REPLICATION_MODE}
    networks:
      db-common-network:

  mongo:
    image: mongo
    # environment:
    # - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
    # - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
    # - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - ./mongo/mongo-volume:/data/db
    ports:
      - ${MONGO_EXPORT_PORT}:${MONGO_PORT}
    networks:
      db-common-network:
    restart: unless-stopped

  neo4j:
    image: neo4j:latest
    restart: unless-stopped
    ports:
      - ${NEO4J_EXPORT_PORT}:${NEO4J_PORT}
      - ${NEO4J_GUI_EXPORT_PORT}:${NEO4J_GUI_PORT}
    environment:
      NEO4J_AUTH: neo4j/test
    volumes:
      - ./neo4j/plugins:/plugins
      - ./neo4j/data:/data
      - ./neo4j/import:/import
    networks:
      db-common-network:

  #######################
  ##                   ##
  ##  DATABASES GUI    ##
  ##                   ##
  #######################
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - "REDIS_HOSTS=${REDIS_COMMANDER_REDIS_HOSTS}"
    depends_on:
      - redis
    ports:
      - "${REDIS_COMMANDER_EXPORT_PORT}:${REDIS_COMMANDER_PORT}"
    networks:
      db-common-network:

  mongoclient:
    image: mongoclient/mongoclient:latest
    container_name: mongoclient
    hostname: mongoclient
    depends_on:
      - mongo
    networks:
      - db-common-network
    ports:
      - ${MONGO_GUI_PORT}:${MONGO_GUI_PORT}

# networking for containers
networks:
  db-common-network:
    driver: bridge
